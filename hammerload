#!/bin/bash

# TODO: print usage (-h, --help)
# TODO: Make timeout a commandline option (not argument)

# USAGE:
# * Modify your username below
# Then, from your local machine, just execute this script with your username as the argument to the script:
#   hammerload jll1062
#
# You can also add an alias to your .bashrc file that reduces the typing involved:
#   alias hammerload='hammerload jll1062'
#
# Then run it by typing
#   hammerload
#
# Finally, the default timeout value of 10 sec makes this workable on fairly
# slow connections, but you can modify this for faster connections to return
# the results more quickly.

DEFAULT_TIMEOUT=10
BASE="hammer"
DOMAIN="rcc.psu.edu"


if [[ "x$1" != "x" ]]; then
	SSH_USERNAME=$1"@"
else
	SSH_USERNAME=""
fi

if [ ! -n "$2" ]
then
	TIMEOUT=$DEFAULT_TIMEOUT
else
	TIMEOUT=$2
fi

#dsh -aMc uptime
printf "%6s  %5s   %-20s  %s\n" Load Users Uptime Hostname
printf "%6s  %5s   %-20s  %s\n" ---- ----- -------------------- --------
#pdsh -t $TIMEOUT -u $TIMEOUT -w ssh:${SSH_USERNAME}@${BASE}[1-12].${DOMAIN} loadusersuptime 2>/dev/null | grep ">>>" | sed -e 's/>>>//' -e 's/:\s*/;/' | awk -F";" '{printf "%6s  %5s   %-20s  %s\n", $2, $3, $4, $1}' 2>/dev/null | sed -e 's/_/ /g' | sort -n
(for i in `seq 1 12`; do
	(setsid ssh -o StrictHostKeyChecking=no ${SSH_USERNAME}${BASE}${i}.${DOMAIN} -o "ConnectTimeout=${TIMEOUT}" bash <<EOF
NUSERS=\$(users | sed -e 's/[ ]\+/\n/g' | sort -u | grep -v \$USER | wc -l)
UPTIME=\$(uptime | sed -e 's/.*up[ ]\+//' -e 's/,[ ]\+[0-9]*[ ]\+user.*//' -e 's/[ ]/_/g')
LOAD=\$(uptime | sed -e 's/.*load average:[ ]\+[0-9.]\+,[ ]\+[0-9.]\+,[ ]\+//')
HOST=\$(sed -r 's/\..*//'<<<\$HOSTNAME)
printf "%6s  %5s   %-20s  %s\n" \$LOAD \$NUSERS \$UPTIME \$HOST
EOF
) 2>/dev/null &
done; wait) | sed -e 's/_/ /g' | sort -n
