#!/bin/bash

# TODO: print usage (-h, --help)
# TODO: Make timeout a commandline option (not argument)

# USAGE:
# * Modify your username below
# Then, from your local machine, just execute this script with your username as the argument to the script:
#   hammerload -u jll1062
#
# You can also add an alias to your .bashrc file that reduces the typing involved:
#   alias hammerload='hammerload jll1062'
#
# Then run it by typing
#   hammerload
#
# Finally, the default timeout value of 10 sec makes this workable on fairly
# slow connections, but you can modify this for faster connections to return
# the results more quickly.

N_NODES=12

# Script argument defaults
BASE="hammer"
DOMAIN="rcc.psu.edu"
PRINT_HEADER="true"
SORT="load"
N=100000
DISPLAY_UPTIME=""
TIMEOUT=10
SSH_USERNAME=""

# Get any arguments from command line
while getopts 'b:d:Dn:pt:u:' flag; do
	case "${flag}" in
		b) BASE=${OPTARG} ;;
		d) DOMAIN=${OPTARG} ;;
		D) PRINT_HEADER='' ;;
		#H) SORT="hostname" ;;
		#h) help ;;
		n) N=${OPTARG} ;;
		p) DISPLAY_UPTIME="true" ;;
		t) TIMEOUT=${OPTARG} ;;
		u) SSH_USERNAME=${OPTARG} ;;
		#U) SORT="users" ;;
	esac
done

# Debug info
DEBUG=''
if [[ $DEBUG ]]; then
	echo "Debug info..."
	echo "BASE: $BASE"
	echo "SSH_USERNAME: $SSH_USERNAME"
	echo "DOMAIN: $DOMAIN"
	echo "TIMEOUT: $TIMEOUT"
	echo "SORT: $SORT"
	echo "N: $N"
	echo "DISPLAY_UPTIME: $DISPLAY_UPTIME"
	echo ""
fi

# Format for header and fields
if [[ ${DISPLAY_UPTIME} ]]; then
	fmtstr="%6s %4s %15s %9s\n"
	labels="Load Usrs Uptime Hostname"
	lines="------ ---- --------------- ---------"
	argstr="\$LOAD \$NUSERS \$UPTIME \$HOST"
else
	fmtstr="%6s %4s %9s\n";
	labels="Load Usrs Hostname"
	lines="------ ---- ---------"
	argstr="\$LOAD \$NUSERS \$HOST"
fi

# Header
if [[ ${PRINT_HEADER} ]]; then
	printf "$fmtstr" $labels
	printf "$fmtstr" $lines
fi

# Run commands in parallel on all servers; sort and tabulate results
(for i in `seq 1 $N_NODES`; do
	(setsid ssh -o StrictHostKeyChecking=no ${SSH_USERNAME}@${BASE}${i}.${DOMAIN} -o "ConnectTimeout=${TIMEOUT}" bash <<EOF
NUSERS=\$(users | sed -e 's/[ ]\+/\n/g' | sort -u | grep -v \$USER | wc -l)
if [[ "${DISPLAY_UPTIME}" ]]; then
	UPTIME=\$(uptime | sed -e 's/.*up[ ]\+//' -e 's/,[ ]\+[0-9]*[ ]\+user.*//' -e 's/[ ]/_/g')
fi
LOAD=\$(uptime | sed -e 's/.*load average:[ ]\+[0-9.]\+,[ ]\+[0-9.]\+,[ ]\+//')
HOST=\$(sed -r 's/\..*//'<<<\$HOSTNAME)
printf "$fmtstr" $argstr
EOF
) 2>/dev/null &
done; wait) | sed -e 's/_/ /g' | sort -n | head -${N}
