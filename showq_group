#!/bin/bash

ALL_USERS="dfc13 dup193 fxh140 jll1062 pde3"

SEP="    "

# Put your username first in the list
USERS="$USER `echo $ALL_USERS | sed s/$USER//`"

tmp_r=`mktemp`
tmp_b=`mktemp`
tmp_q=`mktemp`

# Running jobs
showq -r > $tmp_r 2>/dev/null

# Idle (but eligible-to-run) jobs (?)
showq -b > $tmp_b 2>/dev/null

# Idle (but eligible-to-run) jobs (?)
qstat -a > $tmp_q 2>/dev/null

# Queue header (first line of header)
printf "%8s %23s" "" "      Batch queue      "
printf "$SEP"
printf "%23s" "      Open queue       "
printf "\n"

# Sub-header (seconds line of header)
printf "%-8s %7s %7s %7s" " User" "running" "queued" "total"
printf "$SEP"
printf "%7s %7s %7s   %17s" "running" "queued" "total" "Files in pool dir"
printf "\n"

# Underlines
printf "%-8s %7s %7s %7s" "--------" "-------" "-------" "-------"
printf "$SEP"
printf "%7s %7s %7s   %17s" "-------" "-------" "-------" "-----------------"
printf "\n"

# Counters for totals...

# b_ prefix is for "batch" queue
b_total_running=0
b_total_queued=0
b_total=0

# o_ prefix is for "open" queue
o_total_running=0
o_total_queued=0
o_total=0

jobs_in_pool_total=0

total_cores=0

# Display info for each user
for user in $USERS
do
	if [ "$user" == "$USER" ]
	then
		b_queued=`grep $user $tmp_q | grep " Q " | grep -c " batch "`
		o_queued=`grep $user $tmp_q | grep " Q " | grep -c " open "`
	else
		b_queued=`grep -c $user $tmp_b`
		o_queued=`grep -c $user $tmp_b`
	fi
	b_running=`grep $user $tmp_r | grep -c " PI "`
	b_subtotal=$(( b_running + b_queued ))
	b_total_running=$(( b_total_running + b_running ))
	b_total_queued=$(( b_total_queued + b_queued ))
	b_total=$(( b_total + b_subtotal ))

	o_running=`grep $user $tmp_r | grep " op " | grep -c R`
	o_subtotal=$(( o_running + o_queued ))
	o_total_running=$(( o_total_running + o_running ))
	o_total_queued=$(( o_total_queued + o_queued ))
	o_total=$(( o_total + o_subtotal ))

	jobs_in_pool=`eval "ls ~${user}/PBS/job_pool | wc -l"`
	jobs_in_pool_total=$(( jobs_in_pool_total + jobs_in_pool ))

	cores=`grep $user $tmp_r | awk 'BEGIN{n=0}{n += $10}END{print n}'`
	total_cores=$(( total_cores + cores ))

	printf "%-8s %7d %7d %7d" "$user" $b_running $b_queued $b_subtotal
	printf "$SEP"
	printf "%7d %7d %7d   %17d" $o_running $o_queued $o_subtotal $jobs_in_pool
	printf "\n"
done

# Display info totaled for all users
printf "\n"
printf "%-8s %7d %7d %7d" "Total" $b_total_running $b_total_queued $b_total
printf "$SEP"
printf "%7d %7d %7d   %17d" $o_total_running $o_total_queued $o_total $jobs_in_pool_total
printf "\n\n"

# Display info totaled for all users in all queues
printf "Our totals  : %3d running jobs, %4d cores; %d jobs enqueued.\n" \
	$(( b_total_running + o_total_running )) \
	$total_cores \
	$(( b_total_queued + o_total_queued ))

# Display cluster utilization
printf "Cluster info: %s\n" "`cat $tmp_r | grep 'processors in use' | sed -e 's/  \+/, /' -e 's/active/running/' -e 's/processors/cores/' -e 's/ by local jobs//'`"

# Cleanup
rm -f $tmp_r $tmp_b $tmp_q
